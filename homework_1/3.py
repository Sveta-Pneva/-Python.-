"""
Задание 3.
Для этой задачи
1) придумайте 2-3 решения (обязательно с сложностью)
2) оцените индивидуальность каждого выражения в найденных результатах в нотациях О-большое
3) оцените итоговую устойчивость каждого решения в нотации О-большое
3) сделать вывод, какое решение эффективнее и почему
Сама задача:
Хранение информации о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумываете, например, реализует словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
Примечание: ПРОШУ ВАС ВНИМАТЕЛЬНО ЧИТАТЬ ЗАДАНИЕ!
"""



#1 f = 5 + N log N + 3n + 3 * (n + 1 + 1) = 11 + 6n + N log N - линейно-логарифмическая
annual_profit = {423000 : "adc", 946086 : "qwerty", 65037 : "point", 0 : "tx", 8967 : "cd"} #5
keys = sorted(annual_profit) #N log N
keys = keys[::-1][:3] #3n
for i in range(3): #3n
    k = keys[i] #1
    print(annual_profit[k], k) #1

#2 f = 5 + 1 + 3 * (n + n + n + 1) = 9 + 9n - линейная(самая эфективная)
annual_profit = {423000 : "adc", 946086 : "qwerty", 65037 : "point", 0 : "tx", 8967 : "cd"} #5
ap = annual_profit #1
for i in range(3): #3n
    print(ap[max(ap)], max(ap)) #1n + n
    del ap[max(ap)] #1

#3 f = 5 + 3(N log N) + 3(n + 1) = 8 + 3(N log N) + 3n - линейно-логарифмическая(самая не эфективная)
annual_profit = [[423000, "adc"], [946086, "qwerty"], [65037, "point"], [0, "tx"], [8967, "cd"]] #5
annual_profit = sorted(annual_profit, reverse=True)[:3] #3(N log N)
for i in annual_profit: #n
    print(*i) #1