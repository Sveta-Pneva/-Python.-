"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).
Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.
Решите через рекурсию. В задании нельзя применять циклы.
Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""

def count_num(num, ch=0, nch=0):
    if num > 9:
        n = num % 10
        num -= n
        num //= 10
        if n % 2 == 0:
            ch += 1
        else:
            nch += 1
        return count_num(num, ch, nch)
    else:
        if num % 2 == 0:
            ch += 1
        else:
            nch += 1
        return ch, nch, num

print(count_num(12345))
